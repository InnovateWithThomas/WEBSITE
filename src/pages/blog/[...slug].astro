---
import { getEntry, render, getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Navbar from '../../components/Navbar.jsx';
import Footer from '../../components/Footer.astro';

const { slug } = Astro.params;
const cleanSlug = typeof slug === 'string' ? slug.replace(/\.md$/, '') : slug;

// Charger le post EN depuis la collection 'blog'
const post = await getEntry('blog', cleanSlug);

if (!post) {
  throw new Error(`Post not found: ${cleanSlug}`);
}

const { Content } = await render(post);

const allPosts = await getCollection('blog');
const translatedPost = allPosts.find((p: CollectionEntry<'blog'>) => 
  p.data.translationKey === post.data.translationKey && 
  p.data.lang === "fr"
);

const translatedPostUrl = translatedPost ? `/fr/blog/${translatedPost.slug}` : null;
---
<BaseLayout title={post.data.title} description={post.data.description} lang="en">
  <slot name="navbar">
    <Navbar lang="en" translatedPostUrl={translatedPostUrl} client:load />
  </slot>
	<a href="/blog" id="post-return-link">return</a>
	<div class="post-article">
		<time class="date" datetime={post.data.date}>
			{new Date(post.data.date).toLocaleDateString("en-US", {
				month: "short",
				day: "2-digit",
				year: "numeric"
			})}
		</time>
		<h1 class="post-title">{post.data.title}</h1>
		<article class="post-content">
			<Content />
		</article>
	</div>
	
  <slot name="footer">
    <Footer lang="en" />
  </slot>
</BaseLayout>
